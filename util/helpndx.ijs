NB. defines DICTNDX global for help jumps

DICTNDX=: 0 : 0
=         d000
=.        d001
=:        d001
<         d010
<.        d011
<:        d012
>         d020
>.        d021
>:        d022
_         d030
_.        d031
_:        d032
+         d100
+.        d101
+:        d102
*         d110
*.        d111
*:        d112
-         d120
-.        d121
-:        d122
%         d130
%.        d131
%:        d132
^         d200
^.        d201
^:        d202n
$         d210
$.        d211
$:        d212
~         d220n
~.        d221
~:        d222
|         d230
|.        d231
|:        d232
.         d300
..        d301
.:        d301
:         d310n
:.        d311
::        d312
,         d320
,.        d321
,:        d322
;         d330
;.        d331
;:        d332
#         d400
#.        d401
#:        d402
!         d410
!.        d411
!:        d412
/         d420
/.        d421
/:        d422
\         d430
\.        d431
\:        d432
[         d500
[:        d502
]         d500
{         d520
{.        d521
{:        d522
{::       d523
}         d530n
}.        d531
}:        d532
"         d600n
".        d601
":        d602
`         d610
`:        d612
@         d620
@.        d621
@:        d622
&         d630n
&.        d631
&:        d632
&.:       d631c
?         d640
?.        d640
__        d030
a.        dadot
a:        dadot
A.        dacapdot
b.        dbdotn
C.        dccapdot
d.        dddot
D.        ddcapdot
D:        ddcapco
e.        dedot
E.        decapdot
f.        dfdot
H.        dhcapdot
i.        didot
i:        dico
I.        dicapdot
j.        djdot
L.        dlcapdot
L:        dlcapco
NB.       dnbdot
M.        dmcapdot
o.        dodot
p.        dpdot
p..       dpdotdot
p:        dpco
q:        dqco
r.        drdot
s:        dsco
S:        dscapco
t.        dtdotm
t:        dtco
T.        dtcapdot
u:        duco
x:        dxco
assert.   cassert
break.    cbreak
catch.    ctry
do.       ctrl
else.     cif
elseif.   cif
end.      ctrl
label_?   cgoto
case.     csel
continue. ccont
fcase.    csel
for.      cfor
for_?     cfor
goto_?    cgoto
if.       cif
return.   cret
select.   csel
throw.    cthrow
try.      ctry
while.    cwhile
whilst.   cwhile
0:        dconsf
1:        dconsf
2:        dconsf
3:        dconsf
4:        dconsf
5:        dconsf
6:        dconsf
7:        dconsf
8:        dconsf
9:        dconsf
_1:       dconsf
_2:       dconsf
_3:       dconsf
_4:       dconsf
_5:       dconsf
_6:       dconsf
_7:       dconsf
_8:       dconsf
_9:       dconsf
)